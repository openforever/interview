1. 什么是线程？
	线程是操作系统能够进行运算调度的最小单位，被包含在进程中，是进程中的实际运作单位。程序员可以通过它进
行多处理器编程，你可以使用多线程对运算密集型任务提速。比如，如果一个线程完成一个任务要100毫秒，那么用十个线程完成改任务只需10毫秒。Java在语言层面对多线程提供了卓越的支持，它也是一个很好的卖点。
	单线程如同只雇佣一个服务员的餐厅，多线程如同雇佣多个程序员的餐厅

2. 什么是进程?
	进程是处于运行中的程序，具有一定的功能，进程是系统进行资源分配和调度的一个独立单位
	特征：
	①：独立性，每个进程都拥有自己独立的地址空间
	②：动态性，进程和程序的区别：程序只是一个静态的指令集合，进程是一个正在系统中活动的指令集合(时间)
进程拥有自己的生命周期和各种不同的状态
	③：并发性，多个进程可以在单个处理器上并发执行

3. 并行(parallel)和并发(concurrency)的区别：
	并行：同一时刻，有多条指令在多个处理器上同时执行
	并发：同一时刻只有一条指令执行，但多个进程指令被快读轮换执行，使得宏观上具有多个进程同时执行的效果


4. 线程和进程的区别?
	线程是进程的子集，一个进程可以拥有很多线程，每条线程并发执行不同的任务。不同进程使用不同的存储空间，
而所有的线程共享共享同一进程的相同的内存空间(进程代码段，进程的公有数据).
	每个线程都拥有独立的堆栈，程序计数器和自己的局部变量但不拥有系统资源。线程执行是抢占式的



	